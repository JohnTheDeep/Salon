// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Salon;

#nullable disable

namespace SalonApp.Migrations
{
    [DbContext(typeof(ApplDbContext))]
    [Migration("20221018134651_intial2")]
    partial class intial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Salon.Models.Data.Salons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalonsT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Additional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiscountNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DutyId")
                        .HasColumnType("int");

                    b.Property<decimal>("Fictive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsSertificate")
                        .HasColumnType("bit");

                    b.Property<decimal>("NonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sertificate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("UserTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DutyId");

                    b.HasIndex("UserId");

                    b.ToTable("AdditionalsT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Avancies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DateIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateIn2")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOut2")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duty_Id")
                        .HasColumnType("int");

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Fine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeduction")
                        .HasColumnType("bit");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("When")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhenString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("AvanciesT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.CashBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.Property<decimal>("amountCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("amountNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("amountTransfers")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SalonId");

                    b.ToTable("CashBoxT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.CashBoxOperations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CashBox_Id")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duty_Id")
                        .HasColumnType("int");

                    b.Property<decimal?>("Less")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LessIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Taken")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashBox_Id");

                    b.ToTable("CashBoxOperationsT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("CashPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DutyDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsArrived")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVirtualAdmin")
                        .HasColumnType("bit");

                    b.Property<decimal>("NonCashPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Salon_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Taken")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSertificates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransfersPerDay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("User_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("newcol")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Salon_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("DutyT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Bid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EntryTreshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmail")
                        .HasColumnType("bit");

                    b.Property<decimal>("Paddit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Pfictive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Phandjob")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Ppackage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Rank_Id")
                        .HasColumnType("int");

                    b.Property<int>("Salon_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Rank_Id");

                    b.HasIndex("Salon_Id");

                    b.ToTable("EmployeesT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Percent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Enrollments", (string)null);
                });

            modelBuilder.Entity("SalonApp.Models.Data.Incommings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CashBox_Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("When")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashBox_Id");

                    b.ToTable("IncommingsT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AdditCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AdditNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DutyId")
                        .HasColumnType("int");

                    b.Property<int?>("Employee_id")
                        .HasColumnType("int");

                    b.Property<decimal>("Fictive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HandJobCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HandJobNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Package")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PackageCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PackageNonCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PackageTransfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Sertificate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Service_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Transfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UserTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DutyId");

                    b.HasIndex("Employee_id");

                    b.HasIndex("Service_Id");

                    b.ToTable("JournalT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Lasy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Employee_id")
                        .HasColumnType("int");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<int>("Service_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Employee_id");

                    b.HasIndex("Service_Id");

                    b.ToTable("LasyT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Lesses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Duty_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Duty_Id");

                    b.ToTable("LessesT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Ranks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RanksT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Reminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salon_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Salon_Id");

                    b.ToTable("ReminderT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.SalaryTreshold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Bid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Threshold")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SalaryTresholdT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Salon_Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Salon_id")
                        .HasColumnType("int");

                    b.Property<int>("Service_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Salon_id");

                    b.HasIndex("Service_Id");

                    b.ToTable("Salon_Service");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Services", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte[]>("ServiceImage")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleHandJob")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServicesT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Statistic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("BaseBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Duty_Id")
                        .HasColumnType("int");

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVirtualAdmin")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VirtualAdminBid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isArrivedVirtualAdminBid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Duty_Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("StatisticT");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Paddit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Ppackage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Psertificate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("VirtualAdminBid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Employee_Id");

                    b.ToTable("UsersT");
                });

            modelBuilder.Entity("SalonsServices", b =>
                {
                    b.Property<int>("SalonsId")
                        .HasColumnType("int");

                    b.Property<int>("ServicesId")
                        .HasColumnType("int");

                    b.HasKey("SalonsId", "ServicesId");

                    b.HasIndex("ServicesId");

                    b.ToTable("SalonsServices");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Additional", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Duty", "Duty")
                        .WithMany()
                        .HasForeignKey("DutyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonApp.Models.Data.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Avancies", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Employees", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalonApp.Models.Data.CashBox", b =>
                {
                    b.HasOne("Salon.Models.Data.Salons", "Salon")
                        .WithMany()
                        .HasForeignKey("SalonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("SalonApp.Models.Data.CashBoxOperations", b =>
                {
                    b.HasOne("SalonApp.Models.Data.CashBox", "CashBox")
                        .WithMany()
                        .HasForeignKey("CashBox_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashBox");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Duty", b =>
                {
                    b.HasOne("Salon.Models.Data.Salons", "Salon")
                        .WithMany()
                        .HasForeignKey("Salon_Id");

                    b.HasOne("SalonApp.Models.Data.Users", "User")
                        .WithMany()
                        .HasForeignKey("User_Id");

                    b.Navigation("Salon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Employees", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Ranks", "Rank")
                        .WithMany("Employees")
                        .HasForeignKey("Rank_Id");

                    b.HasOne("Salon.Models.Data.Salons", "Salon")
                        .WithMany("Employees")
                        .HasForeignKey("Salon_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rank");

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Enrollment", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Employees", "Employee")
                        .WithMany("Enrollments")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonApp.Models.Data.Services", "Service")
                        .WithMany("Enrollments")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Incommings", b =>
                {
                    b.HasOne("SalonApp.Models.Data.CashBox", "CashBox")
                        .WithMany()
                        .HasForeignKey("CashBox_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashBox");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Journal", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Duty", "Duty")
                        .WithMany("Journals")
                        .HasForeignKey("DutyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonApp.Models.Data.Employees", "Employee")
                        .WithMany("Journals")
                        .HasForeignKey("Employee_id");

                    b.HasOne("SalonApp.Models.Data.Services", "Service")
                        .WithMany()
                        .HasForeignKey("Service_Id");

                    b.Navigation("Duty");

                    b.Navigation("Employee");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Lasy", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Employees", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonApp.Models.Data.Services", "Service")
                        .WithMany()
                        .HasForeignKey("Service_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Lesses", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Duty", "Duty")
                        .WithMany()
                        .HasForeignKey("Duty_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duty");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Reminder", b =>
                {
                    b.HasOne("Salon.Models.Data.Salons", "Salon")
                        .WithMany()
                        .HasForeignKey("Salon_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Salon_Service", b =>
                {
                    b.HasOne("Salon.Models.Data.Salons", "Salon")
                        .WithMany("Salon_Service")
                        .HasForeignKey("Salon_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonApp.Models.Data.Services", "Service")
                        .WithMany("Salon_Service")
                        .HasForeignKey("Service_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salon");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Statistic", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Duty", "Duty")
                        .WithMany("Statistics")
                        .HasForeignKey("Duty_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonApp.Models.Data.Employees", "Employee")
                        .WithMany("Statistics")
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duty");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Users", b =>
                {
                    b.HasOne("SalonApp.Models.Data.Employees", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalonsServices", b =>
                {
                    b.HasOne("Salon.Models.Data.Salons", null)
                        .WithMany()
                        .HasForeignKey("SalonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalonApp.Models.Data.Services", null)
                        .WithMany()
                        .HasForeignKey("ServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Salon.Models.Data.Salons", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Salon_Service");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Duty", b =>
                {
                    b.Navigation("Journals");

                    b.Navigation("Statistics");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Employees", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Journals");

                    b.Navigation("Statistics");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Ranks", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("SalonApp.Models.Data.Services", b =>
                {
                    b.Navigation("Enrollments");

                    b.Navigation("Salon_Service");
                });
#pragma warning restore 612, 618
        }
    }
}
